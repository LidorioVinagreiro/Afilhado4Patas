@using Microsoft.AspNetCore.Identity
@using Afilhado4Patas.Data;

@model Afilhado4Patas.Models.ViewModels.FuncionarioViewModel;

@inject SignInManager<Utilizadores> SignInManager
@inject UserManager<Utilizadores> UserManager
@inject ApplicationDbContext Context
@{
    ViewData["Title"] = "Ficha Funcionario";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/css/Table/tabela.css" rel="stylesheet" />
<div id="rectangulo_maior"></div>
<div id="page" class="page_maior">
    <div style="height: 120px">
        <div style="float: left">
            @{
                if (Model.Utilizador.Perfil.Photo != null)
                {
                    string src = "/Utilizadores/" + Model.Utilizador.Id + "/" + Model.Utilizador.Perfil.Photo;
                    <img id="imagem_animal" src="@src" />
                }
                else
                {
                    <img id="imagem_animal" src="~/images/default.jpg" />
                }
            }
        </div>
    </div>
    <h3 style="color: #fff">Ficha do Funcionário</h3>
    <div class="table-responsive-vertical shadow-z-1">
        <table id="table" class="table table-hover table-mc-light-blue">
            <thead>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.Utilizador.Perfil.FirstName)</th>
                    <th>@Html.DisplayNameFor(model => model.Utilizador.Perfil.LastName)</th>
                    <th>@Html.DisplayNameFor(model => model.Utilizador.Email)</th>
                    <th>@Html.DisplayNameFor(model => model.Utilizador.Perfil.Birthday)</th>
                    <th>@Html.DisplayNameFor(model => model.Utilizador.Perfil.Genre)</th>
                    <th>@Html.DisplayNameFor(model => model.Utilizador.Perfil.City)</th>
                    <th>@Html.DisplayNameFor(model => model.Utilizador.Perfil.Street)</th>
                    <th>@Html.DisplayNameFor(model => model.Utilizador.Perfil.Postalcode)</th>
                    <th>@Html.DisplayNameFor(model => model.Utilizador.Perfil.NIF)</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td data-title="Nome">
                        @Model.Utilizador.Perfil.FirstName
                    </td>
                    <td data-title="Apelido">
                        @Model.Utilizador.Perfil.LastName
                    </td>
                    <td data-title="Email">
                        @Model.Utilizador.Email
                    </td>
                    <td data-title="Data Nascimneto">
                        @Model.Utilizador.Perfil.Birthday.ToString("dd/MM/yyyy")
                    </td>
                    <td data-title="Sexo">
                        @Model.Utilizador.Perfil.Genre
                    </td>
                    <td data-title="Cidade">
                        @Model.Utilizador.Perfil.City
                    </td>
                    <td data-title="Morada">
                        @Model.Utilizador.Perfil.Street
                    </td>
                    <td data-title="Codigo Postal">
                        @Model.Utilizador.Perfil.Postalcode
                    </td>
                    <td data-title="NIF">
                        @Model.Utilizador.Perfil.NIF
                    </td>
                </tr>
            </tbody>
        </table>
    </div>

    <h3 style="color: slategrey">Tarefas</h3>
    <div class="table-responsive-vertical shadow-z-1">
        <table id="table" class="table table-hover table-mc-light-blue">
            <thead>
                <tr>
                    <th>@Html.Raw("Data de Inicio")</th>
                    <th>@Html.Raw("Data de Fim")</th>
                    <th>@Html.Raw("Descricao")</th>
                    <th>@Html.Raw("Completada")</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.ListaTarefas)
                {
                    <tr>
                        <td data-title="Data de Inicio">
                            @item.Inicio.ToString("dd/MM/yyyy")
                        </td>
                        <td data-title="Data do Fim">
                            @item.Fim.ToString("dd/MM/yyyy")
                        </td>
                        <td data-title="Descricao">
                            @Html.DisplayFor(modelItem => item.Descricao)
                        </td>
                        <td data-title="Completada">
                            @Html.DisplayFor(modelItem => item.Completada)
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<div class="voltar">
    <a class="efeito efeito_botao_back" id="voltar" asp-controller="Responsavel" asp-action="ListaFuncionarios">Voltar</a>
</div>

<script>
    $(document).ready(function () {

        var table = $('#table');

        // Table bordered
        $('#table-bordered').change(function () {
            var value = $(this).val();
            table.removeClass('table-bordered').addClass(value);
        });

        // Table striped
        $('#table-striped').change(function () {
            var value = $(this).val();
            table.removeClass('table-striped').addClass(value);
        });

        // Table hover
        $('#table-hover').change(function () {
            var value = $(this).val();
            table.removeClass('table-hover').addClass(value);
        });

        // Table color
        $('#table-color').change(function () {
            var value = $(this).val();
            table.removeClass(/^table-mc-/).addClass(value);
        });
    });

    // jQuery’s hasClass and removeClass on steroids
    // by Nikita Vasilyev
    // https://github.com/NV/jquery-regexp-classes
    (function (removeClass) {

        jQuery.fn.removeClass = function (value) {
            if (value && typeof value.test === "function") {
                for (var i = 0, l = this.length; i < l; i++) {
                    var elem = this[i];
                    if (elem.nodeType === 1 && elem.className) {
                        var classNames = elem.className.split(/\s+/);

                        for (var n = classNames.length; n--;) {
                            if (value.test(classNames[n])) {
                                classNames.splice(n, 1);
                            }
                        }
                        elem.className = jQuery.trim(classNames.join(" "));
                    }
                }
            } else {
                removeClass.call(this, value);
            }
            return this;
        }

    })(jQuery.fn.removeClass);
</script>




