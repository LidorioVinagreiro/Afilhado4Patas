@using Microsoft.AspNetCore.Identity;
@using Afilhado4Patas.Data;

@model IEnumerable<Afilhado4Patas.Models.ViewModels.TarefaViewModel>

@inject SignInManager<Utilizadores> SignInManager
@inject UserManager<Utilizadores> UserManager
@inject ApplicationDbContext Context

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/css/Table/tabela.css" rel="stylesheet" />
<div id="rectangulo"></div>
<div id="page">
    <h3 style="color: #fff">Lista de tarefas</h3>
    <br />
    <div class="table-responsive-vertical shadow-z-1">
        <table id="table" class="table table-hover table-mc-light-blue">
            <thead>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.FuncionarioId)</th>
                    <th>@Html.DisplayNameFor(model => model.Inicio)</th>
                    <th>@Html.DisplayNameFor(model => model.Fim)</th>
                    <th>@Html.DisplayNameFor(model => model.Descricao)</th>
                    <th>@Html.DisplayNameFor(model => model.Completada)</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td data-title="Funcionario">
                            @{
                                Utilizadores utilizador = Context.Utilizadores.Where(u => u.Id == item.FuncionarioId).FirstOrDefault();
                                utilizador.Perfil = Context.PerfilTable.Where(p => p.Id == utilizador.PerfilId).FirstOrDefault();
                                if (utilizador.Perfil.Photo != null)
                                {
                                    string src = "/Utilizadores/" + utilizador.Id + "/" + utilizador.Perfil.Photo;
                                    <img id="icon_mini" src="@src" />
                                }
                                else
                                {
                                    <img id="icon_mini" src="~/images/default.jpg" />
                                }
                                @Html.Raw(@utilizador.Perfil.FirstName + " " + @utilizador.Perfil.LastName);
                            }
                        </td>
                        <td data-title="Data de Inicio">
                            @item.Inicio.ToString("dd/MM/yyyy")
                        </td>
                        <td data-title="Data do Fim">
                            @item.Fim.ToString("dd/MM/yyyy")
                        </td>
                        <td data-title="Descricao">
                            @Html.DisplayFor(modelItem => item.Descricao)
                        </td>
                        <td data-title="Completada">
                            @Html.DisplayFor(modelItem => item.Completada)
                        </td>
                        <td>
                            @if (item.Fim > DateTime.Now || item.Completada == false)
                            {
                                <a><i class="fa fa-edit green_icon" title="Editar Tarefa"></i></a>
                                <a><i class="fa fa-times red_icon" title="Apagar Tarefa"></i></a>
                            }

                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<div class="voltar">
    <a class="efeito efeito_botao_back" id="voltar" asp-controller="Responsavel" asp-action="AdicionarTarefa">Adicionar Tarefa</a>
</div>

<script>
    $(document).ready(function () {

        var table = $('#table');

        // Table bordered
        $('#table-bordered').change(function () {
            var value = $(this).val();
            table.removeClass('table-bordered').addClass(value);
        });

        // Table striped
        $('#table-striped').change(function () {
            var value = $(this).val();
            table.removeClass('table-striped').addClass(value);
        });

        // Table hover
        $('#table-hover').change(function () {
            var value = $(this).val();
            table.removeClass('table-hover').addClass(value);
        });

        // Table color
        $('#table-color').change(function () {
            var value = $(this).val();
            table.removeClass(/^table-mc-/).addClass(value);
        });
    });

    // jQuery’s hasClass and removeClass on steroids
    // by Nikita Vasilyev
    // https://github.com/NV/jquery-regexp-classes
    (function (removeClass) {

        jQuery.fn.removeClass = function (value) {
            if (value && typeof value.test === "function") {
                for (var i = 0, l = this.length; i < l; i++) {
                    var elem = this[i];
                    if (elem.nodeType === 1 && elem.className) {
                        var classNames = elem.className.split(/\s+/);

                        for (var n = classNames.length; n--;) {
                            if (value.test(classNames[n])) {
                                classNames.splice(n, 1);
                            }
                        }
                        elem.className = jQuery.trim(classNames.join(" "));
                    }
                }
            } else {
                removeClass.call(this, value);
            }
            return this;
        }

    })(jQuery.fn.removeClass);
</script>