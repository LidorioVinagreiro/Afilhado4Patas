@using Microsoft.AspNetCore.Identity
@using Afilhado4Patas.Data;

@model Afilhado4Patas.Models.Animal

@inject SignInManager<Utilizadores> SignInManager
@inject UserManager<Utilizadores> UserManager
@inject ApplicationDbContext Context
@{
    ViewData["Title"] = "Ficha de Animal";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script type="text/javascript" src='~/fullcalendar/lib/jquery.min.js'></script>
<script type="text/javascript" src='~/fullcalendar/lib/moment.min.js'></script>
<script type="text/javascript" src='~/fullcalendar/lib/jquery-ui.custom.min.js'></script>
<script type="text/javascript" src='~/fullcalendar/fullcalendar.js'></script>
<script type="text/javascript" src='~/fullcalendar/locale-all.js'></script>
<link rel="stylesheet" href="~/fullcalendar/fullcalendar-custom-fichaAnimal.css" />
<link href="~/fullcalendar/fullcalendar.print.min.css" rel="stylesheet" media="print" />
<link href="~/css/Table/tabela.css" rel="stylesheet" />
<div id="rectangulo_maior"></div>
<div id="page" class="page_maior">
    <div style="height: 120px">
        <div style="float: left; ">
            @{
                if (Model.Foto != null)
                {
                    string src = "/Animais/" + Model.Id + "/" + Model.Foto;
                    <img id="imagem_animal" src="@src" />
                }
                else
                {
                    <img id="imagem_animal" src="~/images/dog-profile.png" />
                }
            }
        </div>
        <div style="float:left; margin-left: 20px">
            <div style="margin-bottom: 5px">
                <p style="color: #fff"><bold>Descrição: </bold></p>
                <p style="color: #fff">@Model.Descricao</p>
            </div>
        </div>
    </div>
    <h3 style="color: #fff">Ficha Animal</h3>
    <div class="table-responsive-vertical shadow-z-1">
        <table id="table" class="table table-hover table-mc-light-blue">
            <thead>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.NomeAnimal)</th>
                    <th>@Html.DisplayNameFor(model => model.DataNasc)</th>
                    <th>@Html.DisplayNameFor(model => model.Sexo)</th>
                    <th>@Html.DisplayNameFor(model => model.Peso) Kg</th>
                    <th>@Html.DisplayNameFor(model => model.PorteId)</th>
                    <th>@Html.DisplayNameFor(model => model.RacaAnimal.CategoriaId)</th>
                    <th>@Html.DisplayNameFor(model => model.RacaId)</th>
                    <th>@Html.DisplayNameFor(model => model.Adoptado)</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td data-title="Nome Animal">
                        @Model.NomeAnimal
                    </td>
                    <td data-title="Data Nascimneto">
                        @Model.DataNasc.ToString("dd/MM/yyyy")
                    </td>
                    <td data-title="Sexo">
                        @Model.Sexo
                    </td>
                    <td data-title="Peso">
                        @Model.Peso Kg
                    </td>
                    <td data-title="Porte">
                        @Model.PorteAnimal.TipoPorte
                    </td>
                    <td data-title="Especie">
                        @Model.RacaAnimal.CategoriaRaca.Nome
                    </td>
                    <td data-title="Raca">
                        @Model.RacaAnimal.NomeRaca
                    </td>
                    <td data-title="Adotado">
                        @Html.DisplayFor(model => model.Adoptado)
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
    <div id="centrado_tabela">
        @if (Context.FotosAnimais.Where(i => i.AnimalId == Model.Id).Count() > 0)
        {
            <div class="connected-carousels">
                <div class="stage">
                    <div class="carousel carousel-stage">
                        <ul>
                            @foreach (var foto in Context.FotosAnimais.Where(i => i.AnimalId == Model.Id).ToList())
                            {
                                string src = "/Animais/" + foto.AnimalId + "/Galeria/" + foto.FicheiroNome;
                                <li><img src="@src" width="600" height="400" alt=""></li>
                            }
                        </ul>
                    </div>
                    <a href="#" class="prev prev-stage inactive" data-jcarouselcontrol="true"><span>‹</span></a>
                    <a href="#" class="next next-stage" data-jcarouselcontrol="true"><span>›</span></a>
                </div>

                <div class="navigation">
                    <a href="#" class="prev prev-navigation inactive" data-jcarouselcontrol="true">‹</a>
                    <a href="#" class="next next-navigation" data-jcarouselcontrol="true">›</a>
                    <div class="carousel carousel-navigation">
                        <ul>
                            @foreach (var foto in Context.FotosAnimais.Where(i => i.AnimalId == Model.Id).ToList())
                            {
                                string src = "/Animais/" + foto.AnimalId + "/Galeria/" + foto.FicheiroNome;
                                <li><img src="@src" width="50" height="50" alt=""></li>
                            }
                        </ul>
                    </div>
                </div>
            </div>
        }
    </div>
    <div id="centrado_tabela">
        <h3 id="centrado_tabela">Atividades</h3>
        <div id="calendar"></div>
    </div>


    <script>
        $(document).ready(function () {

            $('#calendar').fullCalendar({
                header: {
                    left: 'prev',
                    center: 'title',
                    right: 'next'
                },
                //defaultDate: '2019-01-12',
                defaultView: 'month',
                navLinks: true, // can click day/week names to navigate views
                editable: true,
                eventLimit: true, // allow "more" link when too many events
                contentHeight: 450,
                apectRatio: 1,
                //themeSystem: 'standard',
                themeSystem: 'bootstrap4',
                locale: 'pt',
                events: "/Utilizador/EventosCalendarioUtilizador"
                /*events: $(function (start, end, timezone, callback)
                {
                $.ajax({
                    dataType: "json",
                    type: "GET",
                    contentType: "application/json; charset=utf-8",
                    url: "/Responsavel/EventosCalendario",
                    success: function (data) {
                        var events = [];
                        $(data).each(function(i) {
                            events.push({
                                title: $(this).attr('title'),
                                start: $(this).attr('start'),
                                end: $(this).attr('end')
                            })
                        })
                        callback(events);
                    }
            })
            })*/
            });

        });
    </script>






    @if (User.IsInRole("Responsavel"))
    {
        <div class="voltar">
            <a class="efeito efeito_botao_back" id="voltar" asp-controller="Responsavel" asp-action="Animais">Voltar</a>
        </div>
    }
    else if (User.IsInRole("Funcionario"))
    {
        <div class="voltar">
            <a class="efeito efeito_botao_back" id="voltar" asp-controller="Funcionario" asp-action="Animais">Voltar</a>
        </div>
    }
    else if (User.IsInRole("Utilizador"))
    {
        <div class="voltar">
            <a class="efeito efeito_botao_back" id="voltar" asp-controller="Utilizador" asp-action="Animais">Voltar</a>
        </div>
    }
    else
    {
        <div class="voltar">
            <a class="efeito efeito_botao_back" id="voltar" asp-controller="Guest" asp-action="Animais">Voltar</a>
        </div>
    }
</div>

<script>
    $(document).ready(function () {

        var table = $('#table');

        // Table bordered
        $('#table-bordered').change(function () {
            var value = $(this).val();
            table.removeClass('table-bordered').addClass(value);
        });

        // Table striped
        $('#table-striped').change(function () {
            var value = $(this).val();
            table.removeClass('table-striped').addClass(value);
        });

        // Table hover
        $('#table-hover').change(function () {
            var value = $(this).val();
            table.removeClass('table-hover').addClass(value);
        });

        // Table color
        $('#table-color').change(function () {
            var value = $(this).val();
            table.removeClass(/^table-mc-/).addClass(value);
        });
    });

    // jQuery’s hasClass and removeClass on steroids
    // by Nikita Vasilyev
    // https://github.com/NV/jquery-regexp-classes
    (function (removeClass) {

        jQuery.fn.removeClass = function (value) {
            if (value && typeof value.test === "function") {
                for (var i = 0, l = this.length; i < l; i++) {
                    var elem = this[i];
                    if (elem.nodeType === 1 && elem.className) {
                        var classNames = elem.className.split(/\s+/);

                        for (var n = classNames.length; n--;) {
                            if (value.test(classNames[n])) {
                                classNames.splice(n, 1);
                            }
                        }
                        elem.className = jQuery.trim(classNames.join(" "));
                    }
                }
            } else {
                removeClass.call(this, value);
            }
            return this;
        }

    })(jQuery.fn.removeClass);
</script>
